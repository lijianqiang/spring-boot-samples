<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>
	<settings>
		<!-- 所有映射器中配置的缓存的全局开关 -->
		<setting name="cacheEnabled" value="false" />
		<!-- 延迟加载的全局开关 配置二级缓存时将此属性关闭, 当禁用时，所有关联对象都会即时加载 -->
		<setting name="lazyLoadingEnabled" value="false" />
		<!-- 关联对象加载 配置二级缓存时将此属性关闭, 当启用时，有延迟加载属性的对象在被调用时将会完全加载任意属性。否则，每种属性将会按需要加载 -->
		<setting name="aggressiveLazyLoading" value="false" />
		<!-- 是否允许单一语句返回多结果集 (取决于驱动的兼容性) default:true -->
		<setting name="multipleResultSetsEnabled" value="true" />
		<!-- 使用列标签代替列名 default:true -->
		<setting name="useColumnLabel" value="true" />
		<!-- 允许 JDBC 支持自动生成主键，需要驱动兼容 -->
		<!-- 允许JDBC 生成主键。需要驱动器支持。如果设为了true，这个设置将强制使用被生成的主键，有一些驱动器不兼容不过仍然可以执行。  default:false -->
		<setting name="useGeneratedKeys" value="false" />
		<!-- 指定 MyBatis 是否以及如何自动映射指定的列到字段或属性 -->
		<!-- 指定 MyBatis 如何自动映射 数据基表的列 NONE：不隐射　PARTIAL:部分  FULL:全部  -->   
		<setting name="autoMappingBehavior" value="PARTIAL" />
		<!-- 配置默认的执行器 -->
		<!-- 这是默认的执行类型  （SIMPLE: 简单； REUSE: 执行器可能重复使用prepared statements语句；BATCH: 执行器可以重复执行语句和批量更新）  -->
		<setting name="defaultExecutorType" value="SIMPLE" />
		<!-- 设置超时时间，它决定驱动等待数据库响应的秒数 -->
		<setting name="defaultStatementTimeout" value="30" />
		<!-- 允许在嵌套语句中使用行分界 -->
		<setting name="safeRowBoundsEnabled" value="false" />
		<!-- 是否开启自动驼峰命名规则映射 -->
		<setting name="mapUnderscoreToCamelCase" value="false" />
		<!-- 利用本地缓存机制防止循环引用和加速重复嵌套查询 默认值为 SESSION，这种情况下会缓存一个会话中执行的所有查询 -->
		<!-- 设置本地缓存范围 session:就会有数据的共享  statement:语句范围 (这样就不会有数据的共享 ) defalut:session -->   
		<setting name="localCacheScope" value="SESSION" />
		<!-- 当没有为参数提供特定的 JDBC 类型时，为空值指定 JDBC 类型 -->
		<!-- 设置但JDBC类型为空时,某些驱动程序 要指定值,default:OTHER，插入空值时不需要指定类型 -->        
		<setting name="jdbcTypeForNull" value="OTHER" />
		<!-- 指定哪些对象的方法触发一次延迟加载 -->
		<setting name="lazyLoadTriggerMethods" value="equals,clone,hashCode,toString" />
	</settings>
	<typeAliases>
		<typeAlias alias="Integer" type="java.lang.Integer" />
		<typeAlias alias="Long" type="java.lang.Long" />
		<typeAlias alias="HashMap" type="java.util.HashMap" />
		<typeAlias alias="LinkedHashMap" type="java.util.LinkedHashMap" />
		<typeAlias alias="ArrayList" type="java.util.ArrayList" />
		<typeAlias alias="LinkedList" type="java.util.LinkedList" />
	</typeAliases>
</configuration>